Two interfaces I can use to create a measure:
- Report View
- Data View
The Report view provides the ability to create measures. To create a measure, use the context sensitive menu of the Fields list or the Calculations section of the ribbon. The Data view provides access to data within a dataset and includes the option to create a measure in the Calculations section of the ribbon. Page view and Power Query Editor do not include the option to create a measure.
https://learn.microsoft.com/en-us/training/modules/dax-power-bi-write-formulas/1-introduction


LASTDATE Function
The LASTDATE function will ensure that the SUM function applies only to the last date of the time period, resulting in a semi-additive behavior. The DISTINCTCOUNT function counts the number of distinct values in a column, which results in additive behavior. The CALENDAR function returns a table with a column named Date that contains a contiguous set of dates based on the start date and end date that you specify. The CALENDARAUTO function returns a table with a column named Date that contains a contiguous set of dates based on data in the model.

Calculated tables are generated with DAX queries. Numeric range parameters create a table and measure, both generated with DAX queries. Hierarchies are helpful for drilldown and are defined as part of the data model, but they are not generated by using DAX. Display folders are a way to visually organize measures, columns, or hierarchies. DAX is not used to create them.


Implicit measures vs Explicit measures
1. Implicit Measures
Definition: These are created automatically by Power BI when you drag a field, like a numeric column, into a visual (e.g., a chart or table). Power BI chooses a default aggregation, such as SUM, AVERAGE, COUNT, etc.
Creation: No DAX formula is needed. Power BI generates the measure based on the field type and the context of the visual.
Control: You have limited control over the aggregation method. Power BI may let you change the aggregation type (e.g., from SUM to AVERAGE) within the visual, but you can't fine-tune it beyond that.
Usage: Implicit measures are only available in the visual they are used in. They are not reusable across other visuals, making them more limited in scope.
Example: Dragging a Sales column into a visual creates an implicit measure that might default to SUM(Sales).
When to Use Implicit Measures:
When you need quick, simple aggregations without complex logic.
For straightforward visualizations that donâ€™t require customization.
2. Explicit Measures
Definition: These are user-defined measures created in Power BI using Data Analysis Expressions (DAX). You explicitly define how the measure should be calculated.
Creation: You write a DAX formula to create an explicit measure, defining exactly how you want to aggregate or manipulate your data.
Control: You have full control over the logic and can apply complex calculations, filters, and conditions.
Usage: Explicit measures are reusable across multiple visuals, tables, and reports. Once created, they appear in the Fields pane and can be dragged into any visual.
Example: Writing a DAX formula like Total Sales = SUM(Sales[Amount]) creates an explicit measure named Total Sales that can be reused throughout the report.
When to Use Explicit Measures:
When you need more control and flexibility in calculations.
For complex calculations, such as those involving filters, conditional logic, or time intelligence (e.g., YTD Sales or Average Sales per Day).
When you want a consistent measure to be used across multiple visuals and reports.


Query Reduction
The Reduce number of queries sent by Query reduction setting disables the default behavior that automatically applies cross highlighting and filtering of visuals within the same report. The Slicers Query reduction settings allow you to instantly apply slicer changes and add an Apply button to each slicer. The Filters Query reduction settings allow you to instantly apply basic filter changes. The Persistent filters of Report settings allow you to prevent users from saving filters in the Power BI service.
https://learn.microsoft.com/en-us/training/modules/optimize-model-power-bi/5-directquery-models

Performance Analyzer
You have a Power BI Desktop PBIX file that contains a single page report with multiple visuals.

You plan to use Performance Analyzer to evaluate the performance of the visuals.

You need to eliminate the impact of visual caching during the evaluation.

What should you do first?
To eliminate the impact of visual caching during a performance evaluation when using Performance Analyzer to evaluate the visuals, you must first add a blank page to the report, select that page, and then reopen the PBIX file. Connecting DAX Studio to the data model is the first step to clear the data engine cache. Recording should not be started until both the visual cache and the data engine cache are cleared.
https://learn.microsoft.com/en-us/training/modules/optimize-model-power-bi/2-performance


The CALCULATE function is one of the most powerful functions in DAX because it allows you to change or modify the filter context for your calculations. In simple terms, CALCULATE helps you control which data is included in a calculation, even if filters are already applied elsewhere in your report.
This means that, no matter what year is selected in the report, this measure will always show the total sales for 2022 only.

Waterfall/Tree map Visualizations
https://learn.microsoft.com/en-us/training/modules/power-bi-effective-reports/
